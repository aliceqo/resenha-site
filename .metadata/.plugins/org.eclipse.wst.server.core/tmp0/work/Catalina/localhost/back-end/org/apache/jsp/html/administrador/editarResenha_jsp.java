/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2024-09-12 14:23:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html.administrador;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class editarResenha_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"pt-br\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"../../imagens/icone/book.png\" type=\"image/x-icon\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../../css/stylesEditarResenha.css\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <title>Editar e Excluir Resenha</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"page-container\" class=\"page-content\">\r\n");
      out.write("        <header>\r\n");
      out.write("            <h1>Resenhas de Livros</h1>\r\n");
      out.write("            <nav>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"../index.html\">Início</a></li>\r\n");
      out.write("                    <li><a href=\"indexAdm.html\">Início Adm</a></li>\r\n");
      out.write("                    <li><a href=\"../resenhas.html\">Resenhas</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("                <form id=\"searchForm\">\r\n");
      out.write("                    <input type=\"text\" id=\"searchInput\" name=\"searchInput\" placeholder=\"Buscar resenhas...\">\r\n");
      out.write("                    <button type=\"submit\" id=\"submit\">Pesquisar</button>\r\n");
      out.write("                    <div id=\"resultado\"></div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </header>\r\n");
      out.write("        <section class=\"informacoes\">\r\n");
      out.write("            <h1>Resenha</h1>\r\n");
      out.write("            <form id=\"form-edit-resenha\" action=\"/back-end/excluirEditar\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("                <input type=\"hidden\" id=\"resenhaId\" name=\"resenhaId\">\r\n");
      out.write("                \r\n");
      out.write("                <label for=\"imagem\">Imagem da Capa:</label>\r\n");
      out.write("				<input type=\"file\" id=\"url_foto\" name=\"url_foto\" accept=\"image/*\">\r\n");
      out.write("				<img id=\"imagem_capa\" src=\"");
      out.print( request.getContextPath() );
      out.write('/');
      out.print( request.getAttribute("url_foto") );
      out.write("\"/>\r\n");
      out.write("\r\n");
      out.write("             \r\n");
      out.write("                <label for=\"titulo\">Título:</label>\r\n");
      out.write("                <input type=\"text\" id=\"titulo\" name=\"titulo\" value=\"");
      out.print( request.getAttribute("titulo") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"idade\">Idade de leitura:</label>\r\n");
      out.write("                <input type=\"text\" id=\"idade_leitura\" name=\"idade_leitura\" value=\"");
      out.print( request.getAttribute("idade_leitura") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"livro\">Livro:</label>\r\n");
      out.write("                <input type=\"text\" id=\"livro\" name=\"livro\" value=\"");
      out.print( request.getAttribute("livro") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"autor\">Autor:</label>\r\n");
      out.write("                <input type=\"text\" id=\"autor\" name=\"autor\" value=\"");
      out.print( request.getAttribute("autor") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"tradutor\">Tradutor:</label>\r\n");
      out.write("                <input type=\"text\" id=\"tradutor\" name=\"tradutor\" value=\"");
      out.print( request.getAttribute("tradutor") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"generos\">Gêneros:</label>\r\n");
      out.write("                <input type=\"text\" id=\"generos\" name=\"generos\" value=\"");
      out.print( request.getAttribute("generos") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"idioma\">Idioma:</label>\r\n");
      out.write("                <input type=\"text\" id=\"idioma\" name=\"idioma\" value=\"");
      out.print( request.getAttribute("idioma") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"editora\">Editora:</label>\r\n");
      out.write("                <input type=\"text\" id=\"editora\" name=\"editora\" value=\"");
      out.print( request.getAttribute("editora") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"numero_paginas\">Número de páginas:</label>\r\n");
      out.write("                <input type=\"number\" id=\"numero_paginas\" name=\"numero_paginas\" min=\"1\" value=\"");
      out.print( request.getAttribute("numero_paginas") );
      out.write("\">\r\n");
      out.write("   		  </form>\r\n");
      out.write("	</section>\r\n");
      out.write("        \r\n");
      out.write("        <section class=\"resenha\">\r\n");
      out.write("            <h1>Frase de Destaque</h1>\r\n");
      out.write("            <form id=\"resenha_frase\" action=\"/back-end/excluirEditar\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("            	 <input type=\"hidden\" id=\"resenhaId\" name=\"resenhaId\">\r\n");
      out.write("            	 \r\n");
      out.write("                <input type=\"text\" id=\"frase_destaque\" name=\"frase_destaque\" value=\"");
      out.print( request.getAttribute("frase_destaque") );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <h2>Texto da Resenha</h2>\r\n");
      out.write("                <textarea id=\"conteudo_resenha\" name=\"conteudo_resenha\" rows=\"10\">");
      out.print( request.getAttribute("conteudo_resenha") );
      out.write("</textarea>\r\n");
      out.write("            </form>\r\n");
      out.write("        </section>\r\n");
      out.write("        \r\n");
      out.write("		<div class=\"submit-container\">\r\n");
      out.write("	            <button type=\"button\" id=\"bot-editar-resenha\">Editar Resenha</button>\r\n");
      out.write("	            <button type=\"button\" id=\"bot-excluir-resenha\">Excluir Resenha</button>\r\n");
      out.write("		</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script src=\"../../javaScript/scriptsInicial.js\" defer></script>\r\n");
      out.write("    <script src=\"../../javaScript/editarExcluirResenha.js\" defer></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
