package resenha;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.Part;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import model.DAO;

@WebServlet("/adicionar")
public class adicionarResenha extends HttpServlet {
    private static final long serialVersionUID = 1L;
    private DAO dao = new DAO();

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {
            // Obtenha apenas os parâmetros de texto para teste
            String titulo = request.getParameter("titulo");
            String idadeLeitura = request.getParameter("idade_leitura");
            String livro = request.getParameter("livro");
            String autor = request.getParameter("autor");
            String tradutor = request.getParameter("tradutor");
            String generos = request.getParameter("generos");
            String idioma = request.getParameter("idioma");
            String editora = request.getParameter("editora");
            int numeroPaginas = Integer.parseInt(request.getParameter("numero_paginas"));
            String fraseDestaque = request.getParameter("frase_destaque");
            String conteudoResenha = request.getParameter("conteudo_resenha");

            // Simples verificação de recebimento dos parâmetros
            System.out.println("Título: " + titulo);
            System.out.println("Idade de Leitura: " + idadeLeitura);
            // ... faça isso para todos os parâmetros

            // Tente salvar em banco sem o arquivo
            try (Connection connection = dao.conectar();
                 PreparedStatement statement = connection.prepareStatement("INSERT INTO resenhas (titulo, idade_leitura, livro, "
                         		+ "autor, tradutor, generos, idioma, editora, numero_paginas, frase_destaque, conteudo_resenha) "
                         		+ "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)")) {
                statement.setString(1, titulo);
                statement.setString(2, idadeLeitura);
                statement.setString(3, livro);
                statement.setString(4, autor);
                statement.setString(5, tradutor);
                statement.setString(6, generos);
                statement.setString(7, idioma);
                statement.setString(8, editora);
                statement.setInt(9, numeroPaginas);
                statement.setString(10, fraseDestaque);
                statement.setString(11, conteudoResenha);

                statement.executeUpdate();
            }

            response.sendRedirect("indexAdm.html");
        } catch (SQLException | NumberFormatException e) {
            e.printStackTrace();
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
            response.getWriter().write("Erro ao processar a solicitação: " + e.getMessage());
        }
    }
}
