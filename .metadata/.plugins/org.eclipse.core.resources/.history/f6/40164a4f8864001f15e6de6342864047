package resenha;

import java.io.IOException;
import java.io.PrintWriter;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import model.DAO;


@WebServlet(name = "editarExcluirResenha", urlPatterns = {"/editarResenha"})
public class editarExcluirResenha extends HttpServlet {
	private static final long serialVersionUID = 1L;
    private DAO dao = new DAO();

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        int idResenha = Integer.parseInt(request.getParameter("id"));

        // Busca as informações da resenha no banco de dados
        Resenha resenha = ResenhaDAO.buscarResenhaPorId(idResenha);
        
        if (resenha != null) {
            // Cria um objeto JSON com os dados da resenha
            JSONObject json = new JSONObject();
            json.put("id", resenha.getId());
            json.put("titulo", resenha.getTitulo());
            json.put("url_foto", resenha.getUrlFoto());
            json.put("idadeLeitura", resenha.getIdadeLeitura());
            json.put("livro", resenha.getLivro());
            json.put("autor", resenha.getAutor());
            json.put("tradutor", resenha.getTradutor());
            json.put("generos", resenha.getGeneros());
            json.put("idioma", resenha.getIdioma());
            json.put("editora", resenha.getEditora());
            json.put("numeroPaginas", resenha.getNumeroPaginas());
            json.put("fraseDestaque", resenha.getFraseDestaque());
            json.put("conteudoResenha", resenha.getConteudoResenha());
            
            response.setContentType("application/json");
            PrintWriter out = response.getWriter();
            out.print(json.toString());
            out.flush();
        } else {
            response.setStatus(HttpServletResponse.SC_NOT_FOUND);
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Lê os dados enviados no corpo da requisição
        StringBuilder sb = new StringBuilder();
        String line;
        while ((line = request.getReader().readLine()) != null) {
            sb.append(line);
        }
        
        // Converte os dados para JSON
        JSONObject json = new JSONObject(sb.toString());
        
        // Obtém os dados da resenha
        int idResenha = json.getInt("id");
        String titulo = json.optString("titulo");
        String urlFoto = json.optString("url_foto");
        String idadeLeitura = json.optString("idadeLeitura");
        String livro = json.optString("livro");
        String autor = json.optString("autor");
        String tradutor = json.optString("tradutor");
        String generos = json.optString("generos");
        String idioma = json.optString("idioma");
        String editora = json.optString("editora");
        int numeroPaginas = json.optInt("numeroPaginas");
        String fraseDestaque = json.optString("fraseDestaque");
        String conteudoResenha = json.optString("conteudoResenha");
        
        // Atualiza a resenha no banco de dados
        ResenhaDAO.atualizarResenha(idResenha, titulo, urlFoto, idadeLeitura, livro, autor, tradutor, generos, idioma, editora, numeroPaginas, fraseDestaque, conteudoResenha);
        
        response.setStatus(HttpServletResponse.SC_OK);
    }

    @Override
    protected void doDelete(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        int idResenha = Integer.parseInt(request.getParameter("id"));
        
        // Exclui a resenha do banco de dados
        ResenhaDAO.excluirResenha(idResenha);
        
        response.setStatus(HttpServletResponse.SC_OK);
    }
}
