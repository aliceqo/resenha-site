package resenha;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import model.DAO;

import java.io.IOException;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;

@WebServlet("/get-resenhas")
public class pegarResenha extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private DAO dao = new DAO();

	    @Override
	    protected void doGet(HttpServletRequest request, HttpServletResponse response)
	            throws ServletException, IOException {
	        List<Resenha> resenhas = new ArrayList()<>();
	        try (Connection connection = dao.conectar();
	             PreparedStatement statement = connection.prepareStatement("SELECT * FROM resenhas");
	             ResultSet rs = statement.executeQuery()) {

	            while (rs.next()) {
	                Resenha resenha = new Resenha();
	                resenha.setUrlFoto(rs.getString("url_foto"));
	                resenha.setTitulo(rs.getString("titulo"));
	                resenha.setIdadeLeitura(rs.getString("idade_leitura"));
	                resenha.setLivro(rs.getString("livro"));
	                resenha.setAutor(rs.getString("autor"));
	                resenha.setTradutor(rs.getString("tradutor"));
	                resenha.setGeneros(rs.getString("generos"));
	                resenha.setIdioma(rs.getString("idioma"));
	                resenha.setEditora(rs.getString("editora"));
	                resenha.setNumeroPaginas(rs.getInt("numero_paginas"));
	                resenha.setFraseDestaque(rs.getString("frase_destaque"));
	                resenha.setConteudoResenha(rs.getString("conteudo_resenha"));
	                resenhas.add(resenha);
	            }
	        } catch (SQLException e) {
	            e.printStackTrace();
	        }

	        response.setContentType("application/json");
	        response.setCharacterEncoding("UTF-8");
	        ObjectMapper mapper = new ObjectMapper();
	        mapper.writeValue(response.getWriter(), resenhas);
	    }
	}

}
